# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/gemtcl
pkglibdir = $(libdir)/gemtcl
pkgincludedir = $(includedir)/gemtcl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = gemtcl$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_gemtcl_OBJECTS = gemtcl-gemtcl.$(OBJEXT) \
	gemtcl-gem-button-box.$(OBJEXT) \
	gemtcl-gem-button-box-editor.$(OBJEXT) \
	gemtcl-gem-button-box-button-bless.$(OBJEXT) \
	gemtcl-gem-button-box-button-bless-editor.$(OBJEXT) \
	gemtcl-xmlrpc-server.$(OBJEXT)
gemtcl_OBJECTS = $(am_gemtcl_OBJECTS)
am__DEPENDENCIES_1 =
gemtcl_DEPENDENCIES = $(am__DEPENDENCIES_1)
gemtcl_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(gemtcl_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(gemtcl_SOURCES)
DIST_SOURCES = $(gemtcl_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /archive/svnwork/gemtcl/missing --run aclocal-1.10
AMTAR = ${SHELL} /archive/svnwork/gemtcl/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /archive/svnwork/gemtcl/missing --run autoconf
AUTOHEADER = ${SHELL} /archive/svnwork/gemtcl/missing --run autoheader
AUTOMAKE = ${SHELL} /archive/svnwork/gemtcl/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DB2HTML = true
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
GEMTCL_PACKAGES = gtk+-2.0 gobject-2.0 gmodule-2.0 libglade-2.0 gnet-2.0 gtksourceview-2.0
GREP = /bin/grep
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /archive/svnwork/gemtcl/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = gemtcl
PACKAGE_BUGREPORT = 
PACKAGE_CFLAGS = 
PACKAGE_LIBS = -pthread -Wl,--export-dynamic -L/usr/local/lib -lglade-2.0 -lxml2 -lgnet-2.0 -lgthread-2.0 -lgtksourceview-2.0 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0   -lpcre -ltcl
PACKAGE_CFLAGS=-pthread -I/usr/local/include/gnet-2.0 -I/usr/local/lib/gnet-2.0/include/ -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/libglade-2.0 -I/usr/include/libxml2 -I/usr/include/gtksourceview-2.0  
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.1.26
YACC = bison -y
YFLAGS = 
abs_builddir = /archive/svnwork/gemtcl/src
abs_srcdir = /archive/svnwork/gemtcl/src
abs_top_builddir = /archive/svnwork/gemtcl
abs_top_srcdir = /archive/svnwork/gemtcl
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /archive/svnwork/gemtcl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
SUBDIRS = plis xnm
EXTRA_DIST = changelog_string.i logo_150_inline.i logo_64_inline.i \
	gem-button-box.cc gem-button-box.h gem-button-box-private.h \
	gem-button-box-button-bless-editor.cc \
	gem-button-box-button-bless-editor.h \
	gem-button-box-button-bless-editor-private.h \
	gem-button-box-editor.cc gem-button-box-editor.h \
	gem-button-box-editor-private.h
BUILT_SOURCES = gem-button-box.gob.stamp \
	gem-button-box-button-bless-editor.gob.stamp \
	gem-button-box-editor.gob.stamp
DISTCLEANFILES = gem-button-box.gob.stamp gem-button-box.cc \
	gem-button-box.h gem-button-box-private.h \
	gem-button-box-button-bless-editor.gob.stamp \
	gem-button-box-button-bless-editor.cc \
	gem-button-box-button-bless-editor.h \
	gem-button-box-button-bless-editor-private.h \
	gem-button-box-editor.gob.stamp gem-button-box-editor.cc \
	gem-button-box-editor.h gem-button-box-editor-private.h
gemtcl_SOURCES = \
    gemtcl.cc \
    gem-button-box.cc \
    gem-button-box-editor.cc \
    gem-button-box-button-bless.cc \
    gem-button-box-button-bless-editor.cc \
    xmlrpc-server.c

gemtcl_LDADD = $(PACKAGE_LIBS) 
gemtcl_LDFLAGS = -Lplis -lplis -Lxnm -lxnm
gemtcl_CPPFLAGS = $(PACKAGE_CFLAGS) -Iplis -Ixnm
noinst_HEADERS = 
gem_button_box_SOURCES = gem-button-box.gob gem-button-box.gob.stamp gem-button-box.cc gem-button-box.h gem-button-box-private.h
gem_button_box_button_bless_editor_SOURCES = gem-button-box-button-bless-editor.gob gem-button-box-button-bless-editor.gob.stamp gem-button-box-button-bless-editor.cc gem-button-box-button-bless-editor.h gem-button-box-button-bless-editor-private.h
gem_button_box_editor_SOURCES = gem-button-box-editor.gob gem-button-box-editor.gob.stamp gem-button-box-editor.cc gem-button-box-editor.h gem-button-box-editor-private.h
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
gemtcl$(EXEEXT): $(gemtcl_OBJECTS) $(gemtcl_DEPENDENCIES) 
	@rm -f gemtcl$(EXEEXT)
	$(gemtcl_LINK) $(gemtcl_OBJECTS) $(gemtcl_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gemtcl-gem-button-box-button-bless-editor.Po
include ./$(DEPDIR)/gemtcl-gem-button-box-button-bless.Po
include ./$(DEPDIR)/gemtcl-gem-button-box-editor.Po
include ./$(DEPDIR)/gemtcl-gem-button-box.Po
include ./$(DEPDIR)/gemtcl-gemtcl.Po
include ./$(DEPDIR)/gemtcl-xmlrpc-server.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

gemtcl-xmlrpc-server.o: xmlrpc-server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gemtcl-xmlrpc-server.o -MD -MP -MF $(DEPDIR)/gemtcl-xmlrpc-server.Tpo -c -o gemtcl-xmlrpc-server.o `test -f 'xmlrpc-server.c' || echo '$(srcdir)/'`xmlrpc-server.c
	mv -f $(DEPDIR)/gemtcl-xmlrpc-server.Tpo $(DEPDIR)/gemtcl-xmlrpc-server.Po
#	source='xmlrpc-server.c' object='gemtcl-xmlrpc-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gemtcl-xmlrpc-server.o `test -f 'xmlrpc-server.c' || echo '$(srcdir)/'`xmlrpc-server.c

gemtcl-xmlrpc-server.obj: xmlrpc-server.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gemtcl-xmlrpc-server.obj -MD -MP -MF $(DEPDIR)/gemtcl-xmlrpc-server.Tpo -c -o gemtcl-xmlrpc-server.obj `if test -f 'xmlrpc-server.c'; then $(CYGPATH_W) 'xmlrpc-server.c'; else $(CYGPATH_W) '$(srcdir)/xmlrpc-server.c'; fi`
	mv -f $(DEPDIR)/gemtcl-xmlrpc-server.Tpo $(DEPDIR)/gemtcl-xmlrpc-server.Po
#	source='xmlrpc-server.c' object='gemtcl-xmlrpc-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gemtcl-xmlrpc-server.obj `if test -f 'xmlrpc-server.c'; then $(CYGPATH_W) 'xmlrpc-server.c'; else $(CYGPATH_W) '$(srcdir)/xmlrpc-server.c'; fi`

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

gemtcl-gemtcl.o: gemtcl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gemtcl.o -MD -MP -MF $(DEPDIR)/gemtcl-gemtcl.Tpo -c -o gemtcl-gemtcl.o `test -f 'gemtcl.cc' || echo '$(srcdir)/'`gemtcl.cc
	mv -f $(DEPDIR)/gemtcl-gemtcl.Tpo $(DEPDIR)/gemtcl-gemtcl.Po
#	source='gemtcl.cc' object='gemtcl-gemtcl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gemtcl.o `test -f 'gemtcl.cc' || echo '$(srcdir)/'`gemtcl.cc

gemtcl-gemtcl.obj: gemtcl.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gemtcl.obj -MD -MP -MF $(DEPDIR)/gemtcl-gemtcl.Tpo -c -o gemtcl-gemtcl.obj `if test -f 'gemtcl.cc'; then $(CYGPATH_W) 'gemtcl.cc'; else $(CYGPATH_W) '$(srcdir)/gemtcl.cc'; fi`
	mv -f $(DEPDIR)/gemtcl-gemtcl.Tpo $(DEPDIR)/gemtcl-gemtcl.Po
#	source='gemtcl.cc' object='gemtcl-gemtcl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gemtcl.obj `if test -f 'gemtcl.cc'; then $(CYGPATH_W) 'gemtcl.cc'; else $(CYGPATH_W) '$(srcdir)/gemtcl.cc'; fi`

gemtcl-gem-button-box.o: gem-button-box.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gem-button-box.o -MD -MP -MF $(DEPDIR)/gemtcl-gem-button-box.Tpo -c -o gemtcl-gem-button-box.o `test -f 'gem-button-box.cc' || echo '$(srcdir)/'`gem-button-box.cc
	mv -f $(DEPDIR)/gemtcl-gem-button-box.Tpo $(DEPDIR)/gemtcl-gem-button-box.Po
#	source='gem-button-box.cc' object='gemtcl-gem-button-box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gem-button-box.o `test -f 'gem-button-box.cc' || echo '$(srcdir)/'`gem-button-box.cc

gemtcl-gem-button-box.obj: gem-button-box.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gem-button-box.obj -MD -MP -MF $(DEPDIR)/gemtcl-gem-button-box.Tpo -c -o gemtcl-gem-button-box.obj `if test -f 'gem-button-box.cc'; then $(CYGPATH_W) 'gem-button-box.cc'; else $(CYGPATH_W) '$(srcdir)/gem-button-box.cc'; fi`
	mv -f $(DEPDIR)/gemtcl-gem-button-box.Tpo $(DEPDIR)/gemtcl-gem-button-box.Po
#	source='gem-button-box.cc' object='gemtcl-gem-button-box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gem-button-box.obj `if test -f 'gem-button-box.cc'; then $(CYGPATH_W) 'gem-button-box.cc'; else $(CYGPATH_W) '$(srcdir)/gem-button-box.cc'; fi`

gemtcl-gem-button-box-editor.o: gem-button-box-editor.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gem-button-box-editor.o -MD -MP -MF $(DEPDIR)/gemtcl-gem-button-box-editor.Tpo -c -o gemtcl-gem-button-box-editor.o `test -f 'gem-button-box-editor.cc' || echo '$(srcdir)/'`gem-button-box-editor.cc
	mv -f $(DEPDIR)/gemtcl-gem-button-box-editor.Tpo $(DEPDIR)/gemtcl-gem-button-box-editor.Po
#	source='gem-button-box-editor.cc' object='gemtcl-gem-button-box-editor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gem-button-box-editor.o `test -f 'gem-button-box-editor.cc' || echo '$(srcdir)/'`gem-button-box-editor.cc

gemtcl-gem-button-box-editor.obj: gem-button-box-editor.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gem-button-box-editor.obj -MD -MP -MF $(DEPDIR)/gemtcl-gem-button-box-editor.Tpo -c -o gemtcl-gem-button-box-editor.obj `if test -f 'gem-button-box-editor.cc'; then $(CYGPATH_W) 'gem-button-box-editor.cc'; else $(CYGPATH_W) '$(srcdir)/gem-button-box-editor.cc'; fi`
	mv -f $(DEPDIR)/gemtcl-gem-button-box-editor.Tpo $(DEPDIR)/gemtcl-gem-button-box-editor.Po
#	source='gem-button-box-editor.cc' object='gemtcl-gem-button-box-editor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gem-button-box-editor.obj `if test -f 'gem-button-box-editor.cc'; then $(CYGPATH_W) 'gem-button-box-editor.cc'; else $(CYGPATH_W) '$(srcdir)/gem-button-box-editor.cc'; fi`

gemtcl-gem-button-box-button-bless.o: gem-button-box-button-bless.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gem-button-box-button-bless.o -MD -MP -MF $(DEPDIR)/gemtcl-gem-button-box-button-bless.Tpo -c -o gemtcl-gem-button-box-button-bless.o `test -f 'gem-button-box-button-bless.cc' || echo '$(srcdir)/'`gem-button-box-button-bless.cc
	mv -f $(DEPDIR)/gemtcl-gem-button-box-button-bless.Tpo $(DEPDIR)/gemtcl-gem-button-box-button-bless.Po
#	source='gem-button-box-button-bless.cc' object='gemtcl-gem-button-box-button-bless.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gem-button-box-button-bless.o `test -f 'gem-button-box-button-bless.cc' || echo '$(srcdir)/'`gem-button-box-button-bless.cc

gemtcl-gem-button-box-button-bless.obj: gem-button-box-button-bless.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gem-button-box-button-bless.obj -MD -MP -MF $(DEPDIR)/gemtcl-gem-button-box-button-bless.Tpo -c -o gemtcl-gem-button-box-button-bless.obj `if test -f 'gem-button-box-button-bless.cc'; then $(CYGPATH_W) 'gem-button-box-button-bless.cc'; else $(CYGPATH_W) '$(srcdir)/gem-button-box-button-bless.cc'; fi`
	mv -f $(DEPDIR)/gemtcl-gem-button-box-button-bless.Tpo $(DEPDIR)/gemtcl-gem-button-box-button-bless.Po
#	source='gem-button-box-button-bless.cc' object='gemtcl-gem-button-box-button-bless.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gem-button-box-button-bless.obj `if test -f 'gem-button-box-button-bless.cc'; then $(CYGPATH_W) 'gem-button-box-button-bless.cc'; else $(CYGPATH_W) '$(srcdir)/gem-button-box-button-bless.cc'; fi`

gemtcl-gem-button-box-button-bless-editor.o: gem-button-box-button-bless-editor.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gem-button-box-button-bless-editor.o -MD -MP -MF $(DEPDIR)/gemtcl-gem-button-box-button-bless-editor.Tpo -c -o gemtcl-gem-button-box-button-bless-editor.o `test -f 'gem-button-box-button-bless-editor.cc' || echo '$(srcdir)/'`gem-button-box-button-bless-editor.cc
	mv -f $(DEPDIR)/gemtcl-gem-button-box-button-bless-editor.Tpo $(DEPDIR)/gemtcl-gem-button-box-button-bless-editor.Po
#	source='gem-button-box-button-bless-editor.cc' object='gemtcl-gem-button-box-button-bless-editor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gem-button-box-button-bless-editor.o `test -f 'gem-button-box-button-bless-editor.cc' || echo '$(srcdir)/'`gem-button-box-button-bless-editor.cc

gemtcl-gem-button-box-button-bless-editor.obj: gem-button-box-button-bless-editor.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gemtcl-gem-button-box-button-bless-editor.obj -MD -MP -MF $(DEPDIR)/gemtcl-gem-button-box-button-bless-editor.Tpo -c -o gemtcl-gem-button-box-button-bless-editor.obj `if test -f 'gem-button-box-button-bless-editor.cc'; then $(CYGPATH_W) 'gem-button-box-button-bless-editor.cc'; else $(CYGPATH_W) '$(srcdir)/gem-button-box-button-bless-editor.cc'; fi`
	mv -f $(DEPDIR)/gemtcl-gem-button-box-button-bless-editor.Tpo $(DEPDIR)/gemtcl-gem-button-box-button-bless-editor.Po
#	source='gem-button-box-button-bless-editor.cc' object='gemtcl-gem-button-box-button-bless-editor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemtcl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gemtcl-gem-button-box-button-bless-editor.obj `if test -f 'gem-button-box-button-bless-editor.cc'; then $(CYGPATH_W) 'gem-button-box-button-bless-editor.cc'; else $(CYGPATH_W) '$(srcdir)/gem-button-box-button-bless-editor.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS


# How do I make this happen at autoconf/automake time and not at compile time?
%.gob.stamp: %.gob
	gob2 --for-cpp $<
	@touch $@ 

logo_150_inline.i: ../misc/gemtcl-logo-150.png
	gdk-pixbuf-csource --name=logo_150_inline $< > $@

logo_64_inline.i: ../misc/gemtcl-logo-64.png
	gdk-pixbuf-csource --name=logo_64_inline $< > $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
